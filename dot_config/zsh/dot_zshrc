### Zsh dirs ###
: ${__zsh_config_dir:=${ZDOTDIR:-${XDG_CONFIG_HOME:-$HOME/.config}/zsh}}
: ${__zsh_user_data_dir:=${XDG_DATA_HOME:-$HOME/.local/share}/zsh}
: ${__zsh_cache_dir:=${XDG_CACHE_HOME:-$HOME/.cache}/zsh}

# Ensure these dirs exist
() {
  for zdir in $@
  do
    [ -d "${(P)zdir}" ] || mkdir -p -- "${(P)zdir}"
  done
} __zsh_{config,user_data,cache}_dir

### Homebrew ###
if [ -d /home/linuxbrew/.linuxbrew/bin ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

### ZINIT ##
typeset -A ZINIT=(
  BIN_DIR         $XDG_DATA_HOME/zinit/bin
  HOME_DIR        $XDG_DATA_HOME/zinit
  PLUGINS_DIR     $XDG_DATA_HOME/zinit/plugins
  SNIPPETS_DIR    $XDG_DATA_HOME/zinit/snippets
  COMPLETIONS_DIR $XDG_CACHE_HOME/zsh/completions
  COMPINIT_OPTS   -C
)

export ZINIT_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/zinit/bin"
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export ZSH_CACHE_DIR="$__zsh_cache_dir"
export ZSH_COMPDUMP="${__zsh_cache_dir}/compdump/zcompdump-$SHORTHOST-$VERSION"

if [[ ! -f $ZINIT_HOME/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$XDG_DATA_HOME/zinit" && command chmod g-rwX "$XDG_DATA_HOME/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$XDG_DATA_HOME/zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$ZINIT_HOME/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

### Zplugins ###
## Annexes (important annexes without Turbo)
zinit light-mode for \
  zdharma-continuum/zinit-annex-as-monitor \
  zdharma-continuum/zinit-annex-bin-gem-node \
  zdharma-continuum/zinit-annex-patch-dl \
  zdharma-continuum/zinit-annex-rust

## Plugins
# Oh-my-zsh library,plugins,completions
zinit wait lucid light-mode for \
    OMZL::functions.zsh \
    OMZL::clipboard.zsh \
    OMZL::git.zsh \
    OMZL::grep.zsh \
    OMZL::prompt_info_functions.zsh \
    OMZL::spectrum.zsh \
    OMZL::termsupport.zsh \
    OMZL::key-bindings.zsh \
    OMZP::sudo \
    OMZP::systemd \
    OMZP::urltools \
    OMZP::kubectl \
    OMZP::kube-ps1 \
    OMZP::poetry-env \
    OMZP::poetry \
    wfxr/forgit \
  atinit"zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
    OMZP::colored-man-pages \
  atload"_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
  as"completion" \
    OMZP::rails/_rails \
    OMZP::docker/completions/_docker \
    OMZP::golang/_golang 

### My lib
for lib_file ($ZDOTDIR/lib/*.zsh); do
  source $lib_file
done
unset lib_file

# evalcache for faster load 'eval'
export ZSH_EVALCACHE_DIR=${__zsh_cache_dir}/evalcache
zinit light mroth/evalcache
source "$ZDOTDIR/evalcache.zsh"

# nvm
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NVM_LAZY_LOAD=true
export NVM_LAZY_LOAD_EXTRA_COMMANDS=('vim', 'nvim')
export NVM_AUTO_USE=true
zinit light lukechilds/zsh-nvm

# zsh-autocomplete
zinit ice depth="1"
zinit light marlonrichert/zsh-autocomplete

zstyle ':autocomplete:*' delay 0.001  # seconds (float)

autoload -Uz compinit
compinit
zinit cdreplay -q


